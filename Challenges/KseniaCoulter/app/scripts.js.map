{"version":3,"sources":["custom.js","jquery.js","main.js"],"names":[],"mappings":"AAAA;AACA;ACDA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scripts.js","sourcesContent":["// console.log('Custom JS');\n","// console.log('jquery');\n","// Two solutions here, one using regex and one not\n\n// function checkBrackets(str) {\n//   // using a regular expression to find the number '(' characters in the string,\n//   // escaping with a '\\' because '(' is a special character within a regular\n//   // expression; if no matches are found, and the result of 'match()' is falsey,\n//   // we instead assign an empty array (in order that calling 'length', later, on\n//   // a potentially-null object, won't create an error):\n//   var opens = str.match(/\\(/g) || [],\n//     closes = str.match(/\\)/g) || [];\n//\n//   // if there are equal numbers of '(' and ')' characters, we return true,\n//   // otherwise false:\n//   return opens.length === closes.length;\n// }\n//\n// // unnecessary, this is just a means of iterating over the <li> elements, to work on\n// // a range of inputs for the function:\n// Array.prototype.forEach.call(document.getElementsByTagName('li'), function(li) {\n//   // li is the <li> element/node itself, li.textContent is the text contained within\n//   // that <li>, using the classList API to add a 'valid' class (if brackets are balanced)\n//   // or an 'invalid' class (if the brackets are not balanced):\n//   li.classList.add(checkBrackets(li.textContent) ? 'valid' : 'invalid');\n// });\n\n\nfunction isBalanced(string){\n  var count = 0;\n  for(var i = 0; i < string.length; i++) {\n    if (string[i] === '(') count ++;\n    if (string[i] === ')') count --;\n    if (count < 0) return false;\n  }\n\n  return count === 0;\n}\n// unnecessary, this is just a means of iterating over the <li> elements, to work on\n// a range of inputs for the function:\nArray.prototype.forEach.call(document.getElementsByTagName('li'), function(li) {\n  // li is the <li> element/node itself, li.textContent is the text contained within\n  // that <li>, using the classList API to add a 'valid' class (if brackets are balanced)\n  // or an 'invalid' class (if the brackets are not balanced):\n  li.classList.add(isBalanced(li.textContent) ? 'valid' : 'invalid');\n});\n"],"sourceRoot":"/source/"}